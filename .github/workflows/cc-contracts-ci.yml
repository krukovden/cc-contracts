name: CC Contracts CI

on:
  push:
    branches: [ "main", "releases/**" ]
    paths:
      - 'json/**/*'
      - 'proto/**/*'
      - 'tooling/**/*'
      - '.github/workflows/cc-contracts-ci.yml'
  pull_request:
    branches: [ "main", "releases/**" ]
    paths:
      - 'json/**/*'
      - 'proto/**/*'
      - 'tooling/**/*'
      - '.github/workflows/cc-contracts-ci.yml'
  workflow_dispatch:

concurrency:
  group: cc-contracts-ci-${{ github.head_ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

jobs:
  dump-context:
    name: Dump Context
    runs-on: windows-2019
    steps:
      - name: Dump context
        env:
          DUMP: ${{ toJSON(github) }}
        run: Write-Output $Env:DUMP  
  
  define-version:
    name: Define Version
    needs: dump-context
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: |
          $version = "1.0.$(git rev-list --count HEAD)"
          echo "::set-output name=version::$version"
    
  display-version:
    needs: define-version
    runs-on: ubuntu-latest
    steps:
      - name: Display Version
        run: |
          echo "Version: ${{ needs.define-version.outputs.version }}"  

  publish-nuget-package:
    name: Publish Nuget Package
    needs: [define-version]
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
        name: Checkout branch

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Nuget - Set Nuget credentials
        working-directory: ./
        run: |
          $AbsNugetUsername = "USERNAME"
          echo "ABS_NUGET_USERNAME=$AbsNugetUsername" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          $AbsNugetPassword = "${{ github.TOKEN }}"
          echo "ABS_NUGET_PASSWORD=$AbsNugetPassword" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append     
      
      - name: Restore dependencies
        working-directory: tooling
        run: dotnet restore Contracts.sln --packages "${{ github.workspace }}/.nuget/packages"   
          
      - name: Build
        working-directory: tooling
        run: |          
          dotnet build Contracts.sln --configuration Release --no-restore
                   
      - name: Nuget - Pack
        working-directory: tooling/Contracts
        run: dotnet pack --configuration Release

      - name: Nuget - Push
        working-directory: tooling/Contracts
        run: |
          dotnet nuget push `
          "bin/Release/Abs.CommonCore.Contracts.${{ needs.define-version.outputs.version }}.nupkg" `
          --source "github" `
          --api-key ${{ secrets.GITHUB_TOKEN }}
    

 